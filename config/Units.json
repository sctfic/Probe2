{
  "temperature": {
      "user": "°C",
      "metric": "K",
      "avaible_units": {
          "°C": {
              "title": "Celsius",
              "fnFromMetric": "(k) => k-273.15"
          },
          "°F": {
              "title": "Fahrenheit",
              "fnFromMetric": "(k) => (k-273.15)*9/5+32"
          },
          "K": {
              "title": "Kelvin",
              "fnFromMetric": "(k) => k"
          }
      },
      "sensors": [
          "inTemp",
          "outTemp",
          "dewPoint",
          "heatIndex",
          "windChill",
          "THSW",
          "leafTemp1",
          "leafTemp2",
          "soilTemp1",
          "soilTemp2",
          "soilTemp3",
          "soilTemp4",
          "extraTemp1",
          "extraTemp2",
          "extraTemp3"
      ]
  },
  "speed": {
      "user": "km/h",
      "metric": "m/s",
      "avaible_units": {
          "mph": {
              "title": "mph",
              "fnFromMetric": "(ms) => ms*2.23693"
          },
          "m/s": {
              "title": "m/s",
              "fnFromMetric": "(ms) => ms"
          },
          "km/h": {
              "title": "km/h",
              "fnFromMetric": "(ms) => ms*3.6"
          },
          "knots": {
              "title": "knots",
              "fnFromMetric": "(ms) => ms*2.23693"
          }
      },
      "sensors": [
          "windSpeed",
          "windSpeedMax",
          "avgWindSpeed10Min",
          "avgWindSpeed2Min",
          "windGust10Min"
      ]
  },
  "direction": {
      "user": "cardinal",
      "metric": "°",
      "avaible_units": {
          "°": {
              "title": "degrees",
              "fnFromMetric": "(deg) => deg"
          },
          "cardinal": {
              "title": "cardinal",
              "fnFromMetric": "(deg) => ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'][Math.round(deg / 22.5) % 16]"
          }
      },
      "sensors": [
          "windDir",
          "windDirMax",
          "windGustDir10Min"
      ]
  },
  "pressure": {
      "user": "Bar",
      "metric": "hpa",
      "avaible_units": {
          "inHg": {
              "title": "imperial",
              "fnFromMetric": "(hpa) => hpa*0.750062"
          },
          "hpa": {
              "title": "metric",
              "fnFromMetric": "(hpa) => hpa"
          },
          "mb": {
              "title": "millibar",
              "fnFromMetric": "(hpa) => hpa"
          },
          "Bar": {
              "title": "Barometric pressure",
              "fnFromMetric": "(hpa) => hpa/1000"
          }
      },
      "sensors": [
          "barometer"
      ]
  },
  "rain": {
      "user": "l/m²",
      "metric": "mm",
      "avaible_units": {
          "mm": {
              "title": "milimetre",
              "fnFromMetric": "(mm) => mm"
          },
          "in": {
              "title": "inch",
              "fnFromMetric": "(mm) => mm/25.4"
          },
          "l/m²": {
              "title": "litre per square meter",
              "fnFromMetric": "(mm) => mm*10"
          }
      },
      "sensors": [
          "rainFall",
          "stormRain",
          "dayRain",
          "monthRain",
          "yearRain",
          "dayET",
          "monthET",
          "yearET",
          "last15MinRain",
          "lastHourRain",
          "last24HourRain",
          "ET"
      ]
  },
  "rainRate": {
      "user": "l/m²/h",
      "metric": "mm/h",
      "avaible_units": {
          "mm/h": {
              "title": "milimetre per hour",
              "fnFromMetric": "(mmh) => mmh"
          },
          "in/h": {
              "title": "inch per hour",
              "fnFromMetric": "(mmh) => mmh/25.4"
          },
          "l/m²/h": {
              "title": "litre per square meter per hour",
              "fnFromMetric": "(mmh) => mmh*10"
          }
      },
      "sensors": [
          "rainRate"
      ]
  },
  "uv": {
      "user": "min",
      "metric": "index",
      "avaible_units": {
          "index": {
              "title": "index",
              "fnFromMetric": "(uv) => uv"
          },
          "min": {
              "title": "temps d'exposition avant un coup de soleil = 210/(UVIndex*exp(uvindex/32))",
              "fnFromMetric": "(uv) => 210/(uv*Math.exp(uv/32))"
          }
      },
      "sensors": [
          "UV",
          "UVMax"
      ]
  },
  "powerRadiation": {
      "user": "w/m²",
      "metric": "w/m²",
      "avaible_units": {
          "w/m²": {
              "title": "watt per square meter",
              "fnFromMetric": "(w) => w"
          }
      },
      "sensors": [
          "solarRadiation",
          "solarRadiationMax"
      ]
  },
  "humidity": {
      "user": "%",
      "metric": "%",
      "avaible_units": {
          "%": {
              "title": "percent",
              "fnFromMetric": "(h) => h"
          }
      },
      "sensors": [
          "inHumidity",
          "outHumidity",
          "leafWetness1",
          "leafWetness2",
          "extraHumidity1",
          "extraHumidity2",
          "extraSoilMoisture1",
          "extraSoilMoisture2",
          "extraSoilMoisture3",
          "extraSoilMoisture4"
      ]
  },
  "battery": {
      "user": "%",
      "metric": "V",
      "avaible_units": {
          "%": {
              "title": "percent",
              "fnFromMetric": "(v) => v*100/4.56"
          },
          "V": {
              "title": "volts",
              "fnFromMetric": "(v) => v"
          }
      },
      "sensors": [
          "batteryVoltage"
      ]
  },
  "date": {
      "user": "yyyy-mm-dd",
      "metric": "iso8601",
      "avaible_units": {
        "yyyy-mm-dd": {
            "title": "date",
            "fnFromMetric": "(d) => d.slice(0, 10)"
        },
        "iso8601": {
            "title": "iso8601",
            "fnFromMetric": "(d) => d"
        }
      },
      "sensors": [
          "dateStormRain",
          "date"
      ]
  },
  "time": {
      "user": "hh:mm",
      "metric": "iso8601",
      "avaible_units": {
          "hh:mm": {
              "title": "heure minute",
              "fnFromMetric": "(t) => t.slice(11, 19)"
          },
          "iso8601": {
              "title": "iso8601",
              "fnFromMetric": "(t) => t"
          }
      },
      "sensors": [
          "sunrise",
          "sunset",
          "time"
      ]
  },
  "Forecast": {
      "user": "ForecastClass",
      "metric": "ForecastClass",
      "avaible_units": {
          "ForecastNum": {
              "title": "Weather Forecast Num",
              "fnFromMetric": "(f) => f"
          },
          "ForecastClass": {
              "title": "Weather Forecast Class for CSS",
              "fnFromMetric": "(f) => f"
          }
      },
      "sensors": [
          "ForecastIcon"
      ]
  }
}